{"ast":null,"code":"'use strict';\n\nconst u = require('universalify').fromCallback;\nconst fs = require('graceful-fs');\nconst path = require('path');\nconst copy = require('../copy').copy;\nconst remove = require('../remove').remove;\nconst mkdirp = require('../mkdirs').mkdirp;\nconst pathExists = require('../path-exists').pathExists;\nfunction move(src, dest, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  const overwrite = opts.overwrite || opts.clobber || false;\n  src = path.resolve(src);\n  dest = path.resolve(dest);\n  if (src === dest) return fs.access(src, cb);\n  fs.stat(src, (err, st) => {\n    if (err) return cb(err);\n    if (st.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(`Cannot move '${src}' to a subdirectory of itself, '${dest}'.`));\n    }\n    mkdirp(path.dirname(dest), err => {\n      if (err) return cb(err);\n      return doRename(src, dest, overwrite, cb);\n    });\n  });\n}\nfunction doRename(src, dest, overwrite, cb) {\n  if (overwrite) {\n    return remove(dest, err => {\n      if (err) return cb(err);\n      return rename(src, dest, overwrite, cb);\n    });\n  }\n  pathExists(dest, (err, destExists) => {\n    if (err) return cb(err);\n    if (destExists) return cb(new Error('dest already exists.'));\n    return rename(src, dest, overwrite, cb);\n  });\n}\nfunction rename(src, dest, overwrite, cb) {\n  fs.rename(src, dest, err => {\n    if (!err) return cb();\n    if (err.code !== 'EXDEV') return cb(err);\n    return moveAcrossDevice(src, dest, overwrite, cb);\n  });\n}\nfunction moveAcrossDevice(src, dest, overwrite, cb) {\n  const opts = {\n    overwrite,\n    errorOnExist: true\n  };\n  copy(src, dest, opts, err => {\n    if (err) return cb(err);\n    return remove(src, cb);\n  });\n}\nfunction isSrcSubdir(src, dest) {\n  const srcArray = src.split(path.sep);\n  const destArray = dest.split(path.sep);\n  return srcArray.reduce((acc, current, i) => {\n    return acc && destArray[i] === current;\n  }, true);\n}\nmodule.exports = {\n  move: u(move)\n};","map":null,"metadata":{},"sourceType":"script"}