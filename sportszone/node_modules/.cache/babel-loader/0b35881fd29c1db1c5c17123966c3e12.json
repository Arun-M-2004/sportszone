{"ast":null,"code":"// File is not transpiled.\nconst path = require('path');\nconst fse = require('fs-extra');\n\n/**\r\n * @typedef {object} Browser\r\n * @property {string} id -  Seem random\r\n * @property {string} name - Includes name, version and OS\r\n */\n\n/**\r\n * Records results from the Profiler injected\r\n * @param {*} karmaConfig\r\n */\nfunction KarmaReporterReactProfiler(karmaConfig) {\n  /**\r\n   * Mapping from browser.id to all profiler results it received\r\n   * @type {Map<string, Record<string, unknown[]>}\r\n   */\n  const allRenders = new Map();\n  const {\n    outputDir\n  } = karmaConfig.reactProfilerReporter || {};\n  if (typeof outputDir !== 'string') {\n    throw new TypeError(`Expected karma config to contain reactProfilerReporter.outputDir of type 'string' but got type '${typeof outputDir}'.`);\n  }\n  fse.ensureDirSync(outputDir);\n\n  /**\r\n   * @param {Browser} browser\r\n   * @param {unknown | { type: 'reactProfilerResults', detail: Record<string, unknown[]>}} info\r\n   */\n  function handleBrowserInfo(browser, info) {\n    // `info?.type`\n    if (info != null && info.type === 'reactProfilerResults') {\n      Object.assign(allRenders.get(browser.id), info.detail);\n    }\n  }\n\n  /**\r\n   * @param {Browser} browser\r\n   */\n  this.onBrowserStart = browser => {\n    allRenders.set(browser.id, {});\n    // Create it on start to signal to users where the files will appear\n    fse.ensureDirSync(path.join(outputDir, browser.name));\n    browser.emitter.addListener('browser_info', handleBrowserInfo);\n  };\n\n  /**\r\n   * @param {Browser} browser\r\n   */\n  this.onBrowserComplete = browser => {\n    browser.emitter.removeListener('browser_info', handleBrowserInfo);\n    const browserRenders = allRenders.get(browser.id);\n    if (browserRenders === undefined) {\n      // Can be undefined if the run for this browser never started.\n      // For example, when starting the browser timed out in https://app.circleci.com/pipelines/github/mui/material-ui/32869/workflows/a2f398d9-2eb4-4390-a912-40c1b8d458d8/jobs/211413.\n      console.warn(`Unable to find browser renders for '${browser.id}'. ` + `Only recorded renders for '${Array.from(allRenders.keys()).join(\"', '\")}. ` + `Maybe the browser never started?'`);\n      return;\n    }\n    fse.ensureDirSync(path.join(outputDir, browser.name));\n    fse.writeJSONSync(path.join(outputDir, browser.name, `${Date.now()}.json`), browserRenders, {\n      spaces: 2\n    });\n  };\n}\nKarmaReporterReactProfiler.$inject = ['config'];\nmodule.exports = {\n  'reporter:profiler': ['type', KarmaReporterReactProfiler]\n};","map":{"version":3,"names":["path","require","fse","KarmaReporterReactProfiler","karmaConfig","allRenders","Map","outputDir","reactProfilerReporter","TypeError","ensureDirSync","handleBrowserInfo","browser","info","type","Object","assign","get","id","detail","onBrowserStart","set","join","name","emitter","addListener","onBrowserComplete","removeListener","browserRenders","undefined","console","warn","Array","from","keys","writeJSONSync","Date","now","spaces","$inject","module","exports"],"sources":["C:/Users/HP/Desktop/SportsZone/sportszone/src/Pages/Aboutus.js"],"sourcesContent":["// File is not transpiled.\r\nconst path = require('path');\r\nconst fse = require('fs-extra');\r\n\r\n/**\r\n * @typedef {object} Browser\r\n * @property {string} id -  Seem random\r\n * @property {string} name - Includes name, version and OS\r\n */\r\n\r\n/**\r\n * Records results from the Profiler injected\r\n * @param {*} karmaConfig\r\n */\r\nfunction KarmaReporterReactProfiler(karmaConfig) {\r\n  /**\r\n   * Mapping from browser.id to all profiler results it received\r\n   * @type {Map<string, Record<string, unknown[]>}\r\n   */\r\n  const allRenders = new Map();\r\n\r\n  const { outputDir } = karmaConfig.reactProfilerReporter || {};\r\n  if (typeof outputDir !== 'string') {\r\n    throw new TypeError(\r\n      `Expected karma config to contain reactProfilerReporter.outputDir of type 'string' but got type '${typeof outputDir}'.`,\r\n    );\r\n  }\r\n  fse.ensureDirSync(outputDir);\r\n\r\n  /**\r\n   * @param {Browser} browser\r\n   * @param {unknown | { type: 'reactProfilerResults', detail: Record<string, unknown[]>}} info\r\n   */\r\n  function handleBrowserInfo(browser, info) {\r\n    // `info?.type`\r\n    if (info != null && info.type === 'reactProfilerResults') {\r\n      Object.assign(allRenders.get(browser.id), info.detail);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Browser} browser\r\n   */\r\n  this.onBrowserStart = (browser) => {\r\n    allRenders.set(browser.id, {});\r\n    // Create it on start to signal to users where the files will appear\r\n    fse.ensureDirSync(path.join(outputDir, browser.name));\r\n\r\n    browser.emitter.addListener('browser_info', handleBrowserInfo);\r\n  };\r\n\r\n  /**\r\n   * @param {Browser} browser\r\n   */\r\n  this.onBrowserComplete = (browser) => {\r\n    browser.emitter.removeListener('browser_info', handleBrowserInfo);\r\n\r\n    const browserRenders = allRenders.get(browser.id);\r\n    if (browserRenders === undefined) {\r\n      // Can be undefined if the run for this browser never started.\r\n      // For example, when starting the browser timed out in https://app.circleci.com/pipelines/github/mui/material-ui/32869/workflows/a2f398d9-2eb4-4390-a912-40c1b8d458d8/jobs/211413.\r\n      console.warn(\r\n        `Unable to find browser renders for '${browser.id}'. ` +\r\n          `Only recorded renders for '${Array.from(allRenders.keys()).join(\"', '\")}. ` +\r\n          `Maybe the browser never started?'`,\r\n      );\r\n      return;\r\n    }\r\n\r\n    fse.ensureDirSync(path.join(outputDir, browser.name));\r\n    fse.writeJSONSync(path.join(outputDir, browser.name, `${Date.now()}.json`), browserRenders, {\r\n      spaces: 2,\r\n    });\r\n  };\r\n}\r\n\r\nKarmaReporterReactProfiler.$inject = ['config'];\r\n\r\nmodule.exports = {\r\n  'reporter:profiler': ['type', KarmaReporterReactProfiler],\r\n};"],"mappings":"AAAA;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,GAAG,GAAGD,OAAO,CAAC,UAAU,CAAC;;AAE/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAASE,0BAA0BA,CAACC,WAAW,EAAE;EAC/C;AACF;AACA;AACA;EACE,MAAMC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;EAE5B,MAAM;IAAEC;EAAU,CAAC,GAAGH,WAAW,CAACI,qBAAqB,IAAI,CAAC,CAAC;EAC7D,IAAI,OAAOD,SAAS,KAAK,QAAQ,EAAE;IACjC,MAAM,IAAIE,SAAS,CACjB,mGAAmG,OAAOF,SAAS,IACrH,CAAC;EACH;EACAL,GAAG,CAACQ,aAAa,CAACH,SAAS,CAAC;;EAE5B;AACF;AACA;AACA;EACE,SAASI,iBAAiBA,CAACC,OAAO,EAAEC,IAAI,EAAE;IACxC;IACA,IAAIA,IAAI,IAAI,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,sBAAsB,EAAE;MACxDC,MAAM,CAACC,MAAM,CAACX,UAAU,CAACY,GAAG,CAACL,OAAO,CAACM,EAAE,CAAC,EAAEL,IAAI,CAACM,MAAM,CAAC;IACxD;EACF;;EAEA;AACF;AACA;EACE,IAAI,CAACC,cAAc,GAAIR,OAAO,IAAK;IACjCP,UAAU,CAACgB,GAAG,CAACT,OAAO,CAACM,EAAE,EAAE,CAAC,CAAC,CAAC;IAC9B;IACAhB,GAAG,CAACQ,aAAa,CAACV,IAAI,CAACsB,IAAI,CAACf,SAAS,EAAEK,OAAO,CAACW,IAAI,CAAC,CAAC;IAErDX,OAAO,CAACY,OAAO,CAACC,WAAW,CAAC,cAAc,EAAEd,iBAAiB,CAAC;EAChE,CAAC;;EAED;AACF;AACA;EACE,IAAI,CAACe,iBAAiB,GAAId,OAAO,IAAK;IACpCA,OAAO,CAACY,OAAO,CAACG,cAAc,CAAC,cAAc,EAAEhB,iBAAiB,CAAC;IAEjE,MAAMiB,cAAc,GAAGvB,UAAU,CAACY,GAAG,CAACL,OAAO,CAACM,EAAE,CAAC;IACjD,IAAIU,cAAc,KAAKC,SAAS,EAAE;MAChC;MACA;MACAC,OAAO,CAACC,IAAI,CACV,uCAAuCnB,OAAO,CAACM,EAAE,KAAK,GACpD,8BAA8Bc,KAAK,CAACC,IAAI,CAAC5B,UAAU,CAAC6B,IAAI,CAAC,CAAC,CAAC,CAACZ,IAAI,CAAC,MAAM,CAAC,IAAI,GAC5E,mCACJ,CAAC;MACD;IACF;IAEApB,GAAG,CAACQ,aAAa,CAACV,IAAI,CAACsB,IAAI,CAACf,SAAS,EAAEK,OAAO,CAACW,IAAI,CAAC,CAAC;IACrDrB,GAAG,CAACiC,aAAa,CAACnC,IAAI,CAACsB,IAAI,CAACf,SAAS,EAAEK,OAAO,CAACW,IAAI,EAAE,GAAGa,IAAI,CAACC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAET,cAAc,EAAE;MAC1FU,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;AACH;AAEAnC,0BAA0B,CAACoC,OAAO,GAAG,CAAC,QAAQ,CAAC;AAE/CC,MAAM,CAACC,OAAO,GAAG;EACf,mBAAmB,EAAE,CAAC,MAAM,EAAEtC,0BAA0B;AAC1D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}